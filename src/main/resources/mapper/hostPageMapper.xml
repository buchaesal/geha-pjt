<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bit.geha.dao.HostPageDao">

	<select id="getRejectedGuestHouseCodeList" resultType="int">
		SELECT guestHouseCode, count(*) as rejectCnt 
		FROM reject_tb
		GROUP BY guestHouseCode
		HAVING rejectCnt>=5;
	</select>

	<insert id="addGuestHouse" useGeneratedKeys="true" keyProperty="guestHouseCode" parameterType="GuestHouseDto">
		INSERT INTO guestHouse_tb (guestHouseName, guestHouseInfo, rules, parkingInfo, address, directions, registerDate
			, memberCode, businessTrip, gourmet, trip, shopping, bankName, accountNumber, status)
		VALUES 
		(#{guestHouseName}, #{guestHouseInfo}, #{rules}, #{parkingInfo}, #{address}, #{directions}, now()
			, #{memberCode}, #{businessTrip}, #{gourmet}, #{trip}, #{shopping}, #{bankName}, #{accountNumber}, '승인대기')
	</insert>
	
	<insert id="addRooms" useGeneratedKeys="true" keyProperty="roomCode" parameterType="java.util.List">
		INSERT INTO room_tb (guestHouseCode, roomName, charge, gender, capacity, roomInfo) 
		VALUES
		<foreach collection="list" item="roomDto" separator=", ">
			(#{roomDto.guestHouseCode}, #{roomDto.roomName}, #{roomDto.charge}, #{roomDto.gender}, #{roomDto.capacity}, #{roomDto.roomInfo})
		</foreach>
	</insert>
	
	<insert id="addFacilities" parameterType="java.util.Map">
		INSERT INTO guestHouse_has_facility_tb (guestHouseCode, facilityCode) 
		VALUES 
		<foreach collection="facilityCode" item="facilityCode" separator=", ">
			(#{guestHouseCode}, #{facilityCode})
		</foreach>
	</insert>
	
	<insert id="addFiles" parameterType="java.util.List">
		INSERT INTO file_tb
		VALUES
		<foreach collection="list" item="fileDto" separator=", ">
			(#{fileDto.savedName}, #{fileDto.originalName}, #{fileDto.guestHouseCode}, #{fileDto.roomCode}, #{fileDto.mainImage})
		</foreach>
	</insert>
	
	<update id="modifyGuestHouse" parameterType="GuestHouseDto">
		UPDATE guestHouse_tb
		SET guestHouseName=#{dto.guestHouseName}, guestHouseInfo=#{dto.guestHouseInfo}, rules=#{dto.rules}
			, parkingInfo=#{dto.parkingInfo}, address=#{dto.address}, directions=#{dto.directions}
			, businessTrip=#{dto.businessTrip} , gourmet=#{dto.gourmet}, trip=#{dto.trip}, shopping=#{dto.shopping}
			, bankName=#{dto.bankName}, accountNumber=#{dto.accountNumber} 
			<if test="isReapply">
				, registerDate=now()
				, status='승인대기' 
			</if>
		WHERE guestHouseCode=#{dto.guestHouseCode}
	</update>
	
	<update id="modifyMainImage" parameterType="FileDto">
		UPDATE file_tb SET isMainImage=#{mainImage} WHERE savedName=#{savedName}
	</update>
	
	<update id="modifyRoom" parameterType="RoomDto">
		UPDATE room_tb
		SET roomName=#{roomName}, capacity=#{capacity}, charge=#{charge}, gender=#{gender}, roomInfo=#{roomInfo}
		WHERE roomCode=#{roomCode}
	</update>
	
	<delete id="deleteLike" parameterType="java.util.List">
		DELETE FROM like_tb
		WHERE
		<foreach collection="list" index="index" item="roomCode" open="(" separator="or" close=")">
			roomCode=${roomCode}
		</foreach>
	</delete>
	
	<delete id="deleteRooms" parameterType="java.util.List">
		DELETE FROM room_tb 
		WHERE 
		<foreach collection="list" index="index" item="roomCode" open="(" separator="or" close=")">
			roomCode=${roomCode}
		</foreach>
	</delete>
	
	
	<select id="getGuestBookingList" parameterType="map" resultType="BookingDto">
		SELECT b.*, v.guestHouseCode, v.guestHouseName, v.roomName FROM booking_tb b,  bkrmghmatching_view v 
		WHERE b.bookingCode=v.bookingCode AND v.hostCode=#{hostCode} 
		
		<choose>
			<when test="cri.type == 'guestHouseName'.toString()">
				and v.guestHouseName like concat('%', #{cri.keyword}, '%')
			</when>
			<when test="cri.type == 'bookingStatus'.toString()">
				and b.bookingStatus like concat('%', #{cri.keyword}, '%')
			</when>
		</choose>
		
		ORDER BY b.bookingCode desc
		LIMIT #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<select id="getGuestReviewList" resultType="ReviewDto">
		SELECT r.*, v.guestHouseCode, v.guestHouseName, m.id AS writer 
		FROM review_tb r, bkrmghmatching_view v, member_tb m 
		WHERE r.bookingCode=v.bookingCode AND v.memberCode=m.memberCode AND v.hostCode=#{hostCode} 
		ORDER BY r.writingDate desc
		LIMIT #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<select id="getGuestHouseListTotal" resultType="int">
		SELECT count(*) FROM guestHouse_tb
		WHERE memberCode = #{memberCode}
	</select>
	
	<select id="getGuestBookingListTotal" resultType="int">
		SELECT count(*) 
		FROM booking_tb b,  bkrmghmatching_view v
		WHERE b.bookingCode=v.bookingCode AND v.hostCode=#{hostCode} 
		
		<choose>
			<when test="cri.type == 'guestHouseName'.toString()">
				and v.guestHouseName like concat('%', #{cri.keyword}, '%')
			</when>
			<when test="cri.type == 'bookingStatus'.toString()">
				and b.bookingStatus like concat('%', #{cri.keyword}, '%')
			</when>
		</choose>
	</select>
	
	<select id="getGuestReviewListTotal" resultType="int">
		SELECT count(*) 
		FROM review_tb r, bkrmghmatching_view v, member_tb m 
		WHERE r.bookingCode=v.bookingCode AND v.memberCode=m.memberCode AND v.hostCode=#{hostCode}
	</select>
</mapper>